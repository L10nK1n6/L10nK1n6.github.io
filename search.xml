<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>test</title>
    <url>/2999/11/15/test/</url>
    <content><![CDATA[<p>test</p>]]></content>
  </entry>
  <entry>
    <title>nodebb论坛搭建过程</title>
    <url>/2019/07/15/nodebb%E8%AE%BA%E5%9D%9B%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为原有的论坛升级不了（没钱买商业版的！）而且那个论坛看久了觉得又老又丑，所以打算重新搭建一个论坛。在网上找了半个月了，发现国内的程序太笨重了，还是在国外的社交网站上找到了几个，原本想搭建Flarum的论坛的，但是flarum经历了8年的开发还是bate版的，而且插件也不是很友好，就算了。重新找了一个国外比较火的nodebb。也就是我们论坛现在的程序。基于node.js的。还算可以。</p><a id="more"></a>
<p>为了搭建这个论坛，从在自己的虚拟机模拟环境到在阿里云上搭建，花了我半个月的时间吧（上班也在看这东西），其中老是找老马重置阿里云服务器也是费了不少功夫，挺麻烦了，我估摸着重置服务器大概10+次了吧，各种各样的问题都有，错一步都不行。还是辛苦老马了，无时无刻都给我提供阿里云的验证码。</p>
<p>下面的搭建步骤都是我经过十几次的错误总结出来的，因为这个程序在国内使用的组织不超过5个，所以很多网上的教程都是直接翻译外国人的，其实他们自己都看不懂自己在写什么。这套优秀的程序虽然我不懂为啥在国内火不起来（有可能是买不到nodebb的授权或者搭建很困难），但是既然被我发现了，那就要好好利用一下。</p>
<p>说到搭建困难，这套程序的每一个步骤都是非常关键的，就算是你从github上下载源码，都不一定能搭建成功，而且这个程序中很多架构是需要翻墙才能加载的，阿里云不让翻，所以我也特地把教程中所有的用到“外网”的东西全都用国内大佬特制的命令“汉化”了</p>
<p>这套教程，能卖200！别问我为什么，因为我当初快要放弃的时候，我想找人帮我搭建完事，一看，卧槽，没钱！还是自己消耗生命划算！</p>
<p><img src="https://i.loli.net/2019/11/10/I54YMEcLo6pzbqJ.png" alt="image-1-288x300.png"></p>
<p>OK,进入正文！</p>
<hr>
<h2 id="1-更新源，关防火墙"><a href="#1-更新源，关防火墙" class="headerlink" title="1.更新源，关防火墙"></a>1.更新源，关防火墙</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ yum -y update</span><br><span class="line">$ yum -y install epel-release</span><br><span class="line">$ yum -y groupinstall &quot;Development Tools&quot;</span><br><span class="line">$ yum -y install git ImageMagick ImageMagick-devel</span><br><span class="line"></span><br><span class="line">查看防火墙状态</span><br><span class="line">firewall-cmd --state</span><br><span class="line">停止firewall</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">禁止firewall开机启动</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>
<h2 id="2-NODEJS安装"><a href="#2-NODEJS安装" class="headerlink" title="2.NODEJS安装"></a>2.NODEJS安装</h2><p>安装NVM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash</span><br></pre></td></tr></table></figure>
<p>使环境变量的修改生效</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ source ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>检查是否成功安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ command -v nvm</span><br></pre></td></tr></table></figure>
<p>让NVM使用淘宝源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ export NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node</span><br><span class="line">$ export NVM_IOJS_ORG_MIRROR=http://npm.taobao.org/mirrors/iojs</span><br></pre></td></tr></table></figure>
<p>安装Node.js LTS</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ nvm install --lts</span><br></pre></td></tr></table></figure>
<p>查看是否搭建nodejs成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ node -v &amp;&amp; npm -v</span><br></pre></td></tr></table></figure>
<p>npm更换为cnpm</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<h2 id="3-MONGODB安装"><a href="#3-MONGODB安装" class="headerlink" title="3.MONGODB安装"></a>3.MONGODB安装</h2><p>配置 MongoDB yum 源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim /etc/yum.repos.d/mongodb-org-4.0.repo</span><br></pre></td></tr></table></figure>
<p>把下面的内容复制进去</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mongodb-org-4.0] </span><br><span class="line">name = MongoDB Repository </span><br><span class="line">baseurl = https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/ </span><br><span class="line">gpgcheck = 1 </span><br><span class="line">enabled = 1 </span><br><span class="line">gpgkey = https://www.mongodb.org/static/pgp/server-4.0.asc</span><br></pre></td></tr></table></figure>
<p>更新文件，安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ yum update</span><br><span class="line">$ yum -y install mongodb-org</span><br></pre></td></tr></table></figure>
<p>查看 Mongodb 版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mongod --version</span><br><span class="line">请检查你的 MongoDB 版本是否大于或等于3.4.10，如果不是请立即升级（以前的版本存在严重的安全风险）！</span><br></pre></td></tr></table></figure>
<p>安装完成后，为了消除 MongoDB 的性能警告，需要关闭 Linux 巨型页：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line">$ echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br></pre></td></tr></table></figure>
<p>启动 MongoDB 服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ service mongod start</span><br></pre></td></tr></table></figure>
<p>新建数据库配置(详细可查看 配置MongoDB 篇)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mongo</span><br></pre></td></tr></table></figure>
<p>新建数据库：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; use nodebb # 新建数据库，名叫 nodebb</span><br></pre></td></tr></table></figure>
<p>添加用户角色：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; db.createUser( &#123; user: &quot;nodebb&quot;, pwd: &quot;nodebbpassword&quot;, roles: [ &quot;readWrite&quot; ] &#125; )</span><br></pre></td></tr></table></figure>
<p>如果要在NodeBB的管理控制面板（高级→数据库）中查看数据库统计信息，请键入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; db.grantRolesToUser(&quot;nodebb5&quot;,[&#123; role: &quot;clusterMonitor&quot;, db: &quot;admin&quot; &#125;]);</span><br><span class="line">&gt; exit</span><br></pre></td></tr></table></figure>
<p>打开 MongoDB 权限认证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim /etc/mongod.conf</span><br></pre></td></tr></table></figure>
<p>找到 security: 这一行，取消注释并改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">security:</span><br><span class="line">   authorization: enabled</span><br></pre></td></tr></table></figure>

<p>重启 MongodB</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ service mongod restart</span><br></pre></td></tr></table></figure>
<h2 id="4-NODEBB安装"><a href="#4-NODEBB安装" class="headerlink" title="4.NODEBB安装"></a>4.NODEBB安装</h2><p>下载 NodeBB</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd /home #切换到你想要的位置即可</span><br><span class="line">$ git clone -b v1.12.x https://gitee.com/qiai365/NodeBB.git nodebb</span><br></pre></td></tr></table></figure>
<p>进入目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd /home/nodebb</span><br></pre></td></tr></table></figure>
<p>初始化 NodeBB，使用如下命令开始初始化：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cnpm install</span><br><span class="line">$ cnpm install sharp</span><br><span class="line">$ ./nodebb setup</span><br><span class="line">$ cnpm install --production</span><br><span class="line">$ ./nodebb setup</span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ./nodebb dev</span><br></pre></td></tr></table></figure>
<p>如果都没报错的话可以使用下面的命令启动程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ./nodebb start</span><br></pre></td></tr></table></figure>
<h2 id="5-NGINX安装"><a href="#5-NGINX安装" class="headerlink" title="5.NGINX安装"></a>5.NGINX安装</h2><p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>

<p>在文件内写入以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/rhel/$releasever/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
<p>开始安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ yum -y install nginx.x86_64</span><br></pre></td></tr></table></figure>

<p>配置 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>

<p>在 http 语句块内追加上：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    server_name www.xxx.com;   #你的域名</span><br><span class="line"></span><br><span class="line">   location / &#123;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-NginX-Proxy true;</span><br><span class="line"></span><br><span class="line">        proxy_pass http://127.0.0.1:4567;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line"></span><br><span class="line">        # Socket.IO Support</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>启动 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ service nginx start</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./nodebb start</span><br></pre></td></tr></table></figure>

<p>现在你就可以通过访问你的域名来进入nodebb论坛程序了！</p>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>关于反向代理注意点：</p>
<p>问：在/etc/nginx/nginx.conf填上配置信息后，为什么直接访问域名还是nginx欢迎页面？</p>
<p>答：在/etc/nginx/nginx.conf中除了自己填写的server配置之外，还有一个关注点，那就是在http语句块中<br>include /etc/nginx/conf.d/*.conf这个不起眼的包含语句是致命的，这一句话会将/etc/nginx/conf.d/目录<br>下的一个默认配置default.conf优先处理，而这个默认的default.conf，正好是监听80端口。因为这个问题，我重置<br>了不下5遍服务器重新搭建。然后还是花了一天时间把nginx的官方文档看了一遍才知道的。<br>有人会说百度啊，谷歌啊啥的我咋没搜了，我搜了！但是人家仅仅只会说一句端口占用之类的话，而这个配置导致的问题<br>并不是端口占用，因为nginx不会同时加载这两个（/etc/nginx/nginx.conf、/etc/nginx/conf.d/default.conf），default的优先级更高！<br>所以没查出来端口占用！</p>
<h2 id="高级管理"><a href="#高级管理" class="headerlink" title="高级管理"></a>高级管理</h2><p>安装 forever维持进程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cnpm install forever -g # 这里必须加-g参数，不然可能装不上</span><br></pre></td></tr></table></figure>

<p>后台启动 NodeBB：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ forever start app.js</span><br></pre></td></tr></table></figure>

<p>停止 NodeBB：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ forever stop app.js</span><br></pre></td></tr></table></figure>

<p>查看后台的 NodeBB：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ forever list</span><br></pre></td></tr></table></figure>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>关于nodebb我觉得非常好的东西：</p>
<ol>
<li>markdown编辑器，这是一个每个人都需要会的东西，极度轻简的编辑器带动着宇宙万物。markdown的使用语法，后续会由胖胖Bolooo2_7发出来。</li>
<li>socket.io，socket.io是基于WebSocket的C-S实时通信库，这个东西带动着我们现在论坛的实时聊天和几乎无延迟的消息队列，不信你可以打开一个人的头像发消息给他就知道了，比QQ的速度还要快。更重要的是，安全！！！所有的流量请求均通过WebSocket实现的，什么？抓包改包？你抓一个试试！</li>
<li>颜值，好看就完事了</li>
<li>其他的暂时还没想起来，想起来再补吧</li>
</ol>
]]></content>
  </entry>
</search>
